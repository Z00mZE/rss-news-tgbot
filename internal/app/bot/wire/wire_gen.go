// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"context"
	"github.com/Z00mZE/rss-news-tgbot/internal/app/bot"
	"github.com/Z00mZE/rss-news-tgbot/internal/app/bot/config"
	"github.com/Z00mZE/rss-news-tgbot/internal/app/bot/pkg/logger"
	"github.com/Z00mZE/rss-news-tgbot/internal/app/bot/provider/publisher"
	"github.com/Z00mZE/rss-news-tgbot/internal/app/bot/repository/article"
	"github.com/Z00mZE/rss-news-tgbot/internal/app/bot/service/pubslihworker"
)

// Injectors from wire.go:

func InitApplication(ctx context.Context) (*bot.Application, func(), error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, nil, err
	}
	slogLogger := logger.NewLogger(configConfig)
	provider, err := publisher.NewProvider(configConfig, slogLogger)
	if err != nil {
		return nil, nil, err
	}
	repository := article.NewRepository()
	publishWorker := pubslihworker.NewPublishWorker(provider, repository, configConfig, slogLogger)
	application := bot.NewApplication(ctx, publishWorker, slogLogger)
	return application, func() {
	}, nil
}
